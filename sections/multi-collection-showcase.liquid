{% comment %}
  ** Multi-Collection Viewer **
  - Allows selecting up to 4 collections.
  - Displays products in an interactive tabbed interface.
  - Customizable title, description, and CTA button.
  - Uses a custom-built product card and a self-contained CSS grid.
  - V7.1: Corrected CSS specificity for card-specific color schemes.
{% endcomment %}

{%- liquid
  assign s = section.settings

  assign section_padding_styles = ''
  if s.padding_top > 0
    assign section_padding_styles = 'padding-top: ' | append: s.padding_top | append: 'px;'
  endif
  if s.padding_bottom > 0
    assign section_padding_styles = section_padding_styles | append: ' padding-bottom: ' | append: s.padding_bottom | append: 'px;'
  endif
-%}

<div
  id="multi-collection-viewer-{{ section.id }}"
  class="color-{{ s.color_scheme }} gradient"
  style="{{ section_padding_styles }}"
>
  <div class="page-width">
    <div class="multi-collection-viewer-header">
      <div class="multi-collection-viewer-header__text-wrapper">
        {% if s.heading != blank %}
          <h2 class="{{ s.heading_font_class }}">{{ s.heading | escape }}</h2>
        {% endif %}
        {% if s.description != blank %}
          <div class="rte {{ s.description_font_class }}">{{ s.description }}</div>
        {% endif %}
      </div>
      {% if s.button_label != blank and s.button_link != blank %}
        <a href="{{ s.button_link }}" class="button button--primary">
          {{ s.button_label | escape }}
        </a>
      {% endif %}
    </div>

    {%- assign section_blocks = section.blocks -%}

    {% if section_blocks.size > 0 %}
      <div class="multi-collection-viewer-tabs" id="CollectionTabs-{{ section.id }}">
        <div class="multi-collection-viewer-tabs__container">
          {% for block in section_blocks %}
            {%- assign collection = block.settings.collection -%}
            <button
              class="multi-collection-viewer-tabs__button{% if forloop.first %} is-active{% endif %}"
              data-collection-handle="{{ collection.handle | default: 'all' }}"
              aria-controls="CollectionGrid-{{ section.id }}-{{ forloop.index }}"
              {{ block.shopify_attributes }}
            >
              {{ collection.title | default: 'Collection' }}
            </button>
          {% endfor %}
        </div>
      </div>

      <div class="multi-collection-viewer-content">
        {% for block in section_blocks %}
          {%- assign collection = block.settings.collection -%}
          <div
            id="CollectionGrid-{{ section.id }}-{{ forloop.index }}"
            class="multi-collection-viewer-grid{% unless forloop.first %} hidden{% endunless %}"
            data-collection-content="{{ collection.handle | default: 'all' }}"
          >
            {% if collection.products.size > 0 %}
              <div class="custom-product-grid">
                {% for product in collection.products limit: 4 %}
                  <div class="grid__item">
                    <a href="{{ product.url}}" class="custom-product-card color-{{ s.card_color_scheme }} gradient">
                      <div class="custom-product-card__image-wrapper">
                        {% if product.featured_media %}
                          <img
                            src="{{ product.featured_media | image_url: width: 500 }}"
                            alt="{{ product.featured_media.alt | escape }}"
                            loading="lazy"
                            width="{{ product.featured_media.width }}"
                            height="{{ product.featured_media.height }}"
                            class="custom-product-card__image custom-product-card__image--primary"
                          >
                          {% if product.media[1] %}
                            <img
                              src="{{ product.media[1] | image_url: width: 500 }}"
                              alt="{{ product.media[1].alt | escape }}"
                              loading="lazy"
                              width="{{ product.media[1].width }}"
                              height="{{ product.media[1].height }}"
                              class="custom-product-card__image custom-product-card__image--secondary"
                            >
                          {% endif %}
                        {% else %}
                          {{ 'product-1' | placeholder_svg_tag: 'placeholder-svg custom-product-card__image' }}
                        {% endif %}
                      </div>
                      <div class="custom-product-card__info">
                        <h3 class="custom-product-card__title {{ s.product_title_font_class }}">{{ product.title | escape }}</h3>
                        <div class="custom-product-card__price">
                          {{ product.price | money }}
                          {% if product.compare_at_price > product.price %}
                            <span class="custom-product-card__compare-price">{{ product.compare_at_price | money }}</span>
                          {% endif %}
                        </div>
                      </div>
                    </a>
                  </div>
                {% endfor %}
              </div>
            {% else %}
              <div class="multi-collection-viewer-grid--empty">
                <p>This collection has no products. Select another collection in the theme editor.</p>
                <div class="custom-product-grid">
                  {% for i in (1..4) %}
                    <div class="grid__item">
                      <div class="custom-product-card custom-product-card--placeholder color-{{ s.card_color_scheme }} gradient">
                        {{ 'product-' | append: forloop.index | placeholder_svg_tag: 'placeholder-svg' }}
                        <div class="custom-product-card__info">
                          <div class="placeholder-text">
                            <div class="placeholder-text__item"></div>
                            <div class="placeholder-text__item short"></div>
                          </div>
                        </div>
                      </div>
                    </div>
                  {% endfor %}
                </div>
              </div>
            {% endif %}
          </div>
        {% endfor %}
      </div>
    {% endif %}
  </div>
</div>


{% stylesheet %}
  .multi-collection-viewer-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    gap: 20px;
    margin-bottom: 30px;
  }
  .multi-collection-viewer-header__text-wrapper {
    max-width: 650px;
    flex-grow: 1;
  }
  .multi-collection-viewer-header h2,
  .multi-collection-viewer-header .rte,
  .multi-collection-viewer-grid--empty p {
    color: rgb(var(--color-foreground));
  }
  .multi-collection-viewer-header h2 {
    margin-bottom: 10px;
  }
  .multi-collection-viewer-tabs {
    display: flex;
    justify-content: center;
    margin-bottom: 40px;
  }
  .multi-collection-viewer-tabs__container {
    display: inline-flex;
    background-color: rgba(var(--color-foreground), 0.05);
    border-radius: 999px;
    padding: 6px;
  }
  .multi-collection-viewer-tabs__button {
    padding: 10px 24px;
    border: none;
    background-color: transparent;
    border-radius: 999px;
    cursor: pointer;
    transition: background-color 0.3s ease, color 0.3s ease, box-shadow 0.3s ease;
    font-family: var(--font-body-family);
    font-weight: var(--font-body-weight-bold);
    color: rgb(var(--color-foreground));
  }
  .multi-collection-viewer-tabs__button.is-active {
    background-color: rgb(var(--color-background));
    color: rgb(var(--color-foreground));
    box-shadow: 0 2px 10px rgba(var(--color-shadow), 0.1);
  }
  .hidden {
    display: none;
  }

  /* Custom Grid Layout Styles */
  .custom-product-grid {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 20px;
  }
  .grid__item {
    display: flex;
  }

  /* Custom Product Card Styles */
  .custom-product-card {
    display: flex;
    flex-direction: column;
    text-decoration: none;
    border: 1px solid rgba(var(--color-foreground), 0.1);
    border-radius: 8px;
    overflow: hidden;
    transition: box-shadow 0.3s ease, border-color 0.3s ease;
    width: 100%;
    height: 100%;
    background: var(--gradient-background);
  }
  .custom-product-card:hover {
    box-shadow: 0 4px 15px rgba(var(--color-shadow), 0.1);
    border-color: rgba(var(--color-foreground), 0.2);
  }
  .custom-product-card__image-wrapper {
    width: 100%;
    padding-bottom: 100%;
    position: relative;
    overflow: hidden;
  }
  .custom-product-card__image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: opacity 0.3s ease;
  }
  .custom-product-card__image--secondary { opacity: 0; }
  .custom-product-card:hover .custom-product-card__image--primary { opacity: 0; }
  .custom-product-card:hover .custom-product-card__image--secondary { opacity: 1; }
  .custom-product-card__info {
    padding: 15px;
    text-align: center;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    flex-grow: 1;
  }

  /* === CSS CORRECTION STARTS HERE === */
  .custom-product-card .custom-product-card__title,
  .custom-product-card .custom-product-card__price {
    color: rgb(var(--color-foreground));
  }
  /* === CSS CORRECTION ENDS HERE === */

  .custom-product-card__title {
    margin-bottom: 8px;
    line-height: 1.3;
  }
  .custom-product-card__price {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 8px;
    flex-wrap: wrap;
    font-family: var(--font-body-family);
  }
  .custom-product-card .custom-product-card__compare-price {
    text-decoration: line-through;
    font-size: 0.9em;
    color: rgba(var(--color-foreground), 0.75);
  }

  /* Placeholder styles */
  .custom-product-card--placeholder {
    background: var(--gradient-background);
    border: 1px solid rgba(var(--color-foreground), 0.08);
  }
  .custom-product-card--placeholder .placeholder-svg {
    display: block;
    border-bottom: 1px solid rgba(var(--color-foreground), 0.08);
  }
  .custom-product-card--placeholder .placeholder-text__item {
    background-color: rgba(var(--color-foreground), 0.08);
  }

  .page-width {
    width: 90%;
    margin: 0 auto;
  }

  /* Responsive Adjustments */
  @media screen and (max-width: 990px) {
    .custom-product-grid { grid-template-columns: repeat(3, 1fr); }
  }

  @media screen and (max-width: 749px) {
    .multi-collection-viewer-header {
      flex-direction: column;
      align-items: center;
      text-align: center;
    }
    .multi-collection-viewer-header .button { margin-top: 15px; }
    .multi-collection-viewer-tabs__container { flex-wrap: wrap; justify-content: center; }
    .multi-collection-viewer-tabs__button { padding: 8px 18px; }
    .custom-product-grid { grid-template-columns: repeat(2, 1fr); gap: 15px; }
  }

  @media screen and (max-width: 480px) {
    .custom-product-grid { grid-template-columns: repeat(1, 1fr); }
  }
{% endstylesheet %}

{% schema %}
{
  "name": "Multi-Collection Viewer",
  "tag": "section",
  "class": "spaced-section",
  "max_blocks": 4,
  "settings": [
    {
      "type": "header",
      "content": "Color Schemes"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "Section color scheme",
      "default": "background-1"
    },
    {
      "type": "color_scheme",
      "id": "card_color_scheme",
      "label": "Product card color scheme",
      "default": "background-2"
    },
    {
      "type": "header",
      "content": "Section Content"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Featured Collections"
    },
    {
      "type": "richtext",
      "id": "description",
      "label": "Description",
      "default": "<p>Check out our curated collections. Find what you're looking for.</p>"
    },
    {
      "type": "text",
      "id": "button_label",
      "label": "Button Label",
      "default": "View All"
    },
    {
      "type": "url",
      "id": "button_link",
      "label": "Button Link"
    },
    {
      "type": "header",
      "content": "Typography"
    },
    {
      "type": "select",
      "id": "heading_font_class",
      "label": "Heading font",
      "options": [
        { "value": "h1", "label": "Heading 1"},
        { "value": "h2", "label": "Heading 2"},
        { "value": "h3", "label": "Heading 3"},
        { "value": "h4", "label": "Heading 4"}
      ],
      "default": "h2"
    },
    {
      "type": "select",
      "id": "description_font_class",
      "label": "Description font",
      "options": [
        { "value": "body-text", "label": "Body"},
        { "value": "body-text-sm", "label": "Body (Small)"},
        { "value": "subheading", "label": "Subheading"}
      ],
      "default": "body-text"
    },
    {
      "type": "select",
      "id": "product_title_font_class",
      "label": "Product title font",
      "options": [
        { "value": "h5", "label": "Heading 5"},
        { "value": "h6", "label": "Heading 6"},
        { "value": "body-text", "label": "Body"}
      ],
      "default": "h6"
    },
    {
      "type": "header",
      "content": "Section Padding"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Top padding",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Bottom padding",
      "default": 36
    }
  ],
  "blocks": [
    {
      "type": "collection",
      "name": "Collection",
      "settings": [
        {
          "type": "collection",
          "id": "collection",
          "label": "Collection to display"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Multi-Collection Viewer",
      "blocks": [
        { "type": "collection" },
        { "type": "collection" },
        { "type": "collection" }
      ]
    }
  ]
}
{% endschema %}

{% javascript %}
class MultiCollectionViewer {
  constructor(container) {
    this.container = container;
    this.tabs = this.container.querySelectorAll('[data-collection-handle]');
    this.contents = this.container.querySelectorAll('[data-collection-content]');
    this.init();
  }
  init() {
    if (!this.tabs.length) return;
    this.tabs.forEach(tab => {
      tab.addEventListener('click', (event) => {
        event.preventDefault();
        this.onTabClick(tab);
      });
    });
  }
  onTabClick(clickedTab) {
    const targetHandle = clickedTab.dataset.collectionHandle;
    this.tabs.forEach(tab => tab.classList.remove('is-active'));
    clickedTab.classList.add('is-active');
    this.contents.forEach(content => {
      content.classList.toggle('hidden', content.dataset.collectionContent !== targetHandle);
    });
  }
}
document.addEventListener('DOMContentLoaded', () => {
  const sections = document.querySelectorAll('[id^="multi-collection-viewer-"]');
  sections.forEach(section => {
    if (section) {
      new MultiCollectionViewer(section);
    }
  });
});
{% endjavascript %}