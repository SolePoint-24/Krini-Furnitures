{% comment %}
  ** Multi-Collection Viewer **
  - Allows selecting up to 4 collections.
  - Displays products in an interactive tabbed interface.
  - Customizable title, description, and CTA button.
  - Uses the theme's existing product card for consistent styling.
{% endcomment %}

<div class="page-width">
  <div class="multi-collection-viewer-header">
    <div class="multi-collection-viewer-header__text-wrapper">
      {% if section.settings.heading != blank %}
        <h2 class="h2">{{ section.settings.heading | escape }}</h2>
      {% endif %}
      {% if section.settings.description != blank %}
        <div class="rte">{{ section.settings.description }}</div>
      {% endif %}
    </div>
    {% if section.settings.button_label != blank and section.settings.button_link != blank %}
      <a href="{{ section.settings.button_link }}" class="button button--primary">
        {{ section.settings.button_label | escape }}
      </a>
    {% endif %}
  </div>

  {%- assign section_blocks = section.blocks -%}

  {% if section_blocks.size > 0 %}
    <div class="multi-collection-viewer-tabs" id="CollectionTabs-{{ section.id }}">
      <div class="multi-collection-viewer-tabs__container">
        {% for block in section_blocks %}
          {%- assign collection = block.settings.collection -%}
          <button
            class="multi-collection-viewer-tabs__button{% if forloop.first %} is-active{% endif %}"
            data-collection-handle="{{ collection.handle | default: 'all' }}"
            aria-controls="CollectionGrid-{{ section.id }}-{{ forloop.index }}"
            {{ block.shopify_attributes }}
          >
            {{ collection.title | default: 'All Products' }}
          </button>
        {% endfor %}
      </div>
    </div>

    <div class="multi-collection-viewer-content">
      {% for block in section_blocks %}
        {%- assign collection = block.settings.collection -%}
        <div
          id="CollectionGrid-{{ section.id }}-{{ forloop.index }}"
          class="multi-collection-viewer-grid{% unless forloop.first %} hidden{% endunless %}"
          data-collection-content="{{ collection.handle | default: 'all' }}"
        >
          {% if collection != blank and collection.products.size > 0 %}
            <div class="grid grid--4-col-desktop grid--2-col-tablet grid--2-col-mobile">
              {% for product in collection.products limit: section.settings.products_to_show %}
                <div class="grid__item">
                  {% comment %}
                    Render the product card using the proper structure expected by the Tinker theme
                  {% endcomment %}
                  {% render 'product-card', 
                    product: product,
                    block: block,
                    children: {null},
                  %}
                </div>
              {% endfor %}
            </div>
          {% elsif collection == blank %}
            {% comment %} Show all products if no collection is selected {% endcomment %}
            <div class="grid grid--4-col-desktop grid--2-col-tablet grid--2-col-mobile">
              {% for product in collections.all.products limit: section.settings.products_to_show %}
                <div class="grid__item">
                  {% render 'product-card',
                    product: product,
                    block: block,
                    children: {null},
                  %}
                </div>
              {% endfor %}
            </div>
          {% else %}
            <div class="multi-collection-viewer-grid--empty">
              <p>This collection has no products. Select another collection in the theme editor.</p>
              <div class="grid grid--4-col-desktop grid--2-col-tablet grid--2-col-mobile">
                {% for i in (1..4) %}
                  <div class="grid__item">
                    <div class="product-card-placeholder">
                      {% capture current %}{% cycle 1, 2, 3, 4 %}{% endcapture %}
                      {{ 'product-' | append: current | placeholder_svg_tag: 'placeholder-svg' }}
                      <div class="placeholder-text">
                        <div class="placeholder-text__item"></div>
                        <div class="placeholder-text__item short"></div>
                      </div>
                    </div>
                  </div>
                {% endfor %}
              </div>
            </div>
          {% endif %}
        </div>
      {% endfor %}
    </div>
  {% endif %}
</div>

{% stylesheet %}
  .multi-collection-viewer-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    gap: 20px;
    margin-bottom: 30px;
  }

  .multi-collection-viewer-header__text-wrapper {
    max-width: 650px;
  }

  .multi-collection-viewer-header h2 {
    margin-bottom: 10px;
  }

  .multi-collection-viewer-tabs {
    display: flex;
    justify-content: center;
    margin-bottom: 40px;
  }

  .multi-collection-viewer-tabs__container {
    display: inline-flex;
    background-color: #f3f3f3;
    border-radius: 999px;
    padding: 6px;
  }

  .multi-collection-viewer-tabs__button {
    padding: 10px 24px;
    border: none;
    background-color: transparent;
    border-radius: 999px;
    cursor: pointer;
    font-size: 1rem;
    font-weight: 500;
    transition: background-color 0.3s ease, color 0.3s ease, box-shadow 0.3s ease;
    color: #555;
  }

  .multi-collection-viewer-tabs__button.is-active {
    background-color: #ffffff;
    color: #121212;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  }

  .multi-collection-viewer-tabs__button:hover:not(.is-active) {
    background-color: rgba(255, 255, 255, 0.5);
  }

  .hidden {
    display: none !important;
  }

  /* Grid styling */
  .multi-collection-viewer-grid .grid {
    display: grid;
    gap: 1.5rem;
  }

  .grid--4-col-desktop {
    grid-template-columns: repeat(4, 1fr);
  }

  /* Empty state styling */
  .multi-collection-viewer-grid--empty {
    text-align: center;
  }

  .multi-collection-viewer-grid--empty p {
    margin-bottom: 2rem;
    color: #666;
  }

  /* Placeholder styles for empty state */
  .product-card-placeholder {
    background-color: #f9f9f9;
    border: 1px solid #e5e5e5;
    border-radius: 4px;
    overflow: hidden;
  }
  
  .product-card-placeholder .placeholder-svg {
    width: 100%;
    height: auto;
    display: block;
  }
  
  .product-card-placeholder .placeholder-text {
    padding: 15px;
  }
  
  .product-card-placeholder .placeholder-text__item {
    background-color: #e5e5e5;
    height: 12px;
    border-radius: 2px;
    margin-bottom: 8px;
  }
  
  .product-card-placeholder .placeholder-text__item.short {
    width: 60%;
  }

  /* Responsive Adjustments */
  @media screen and (max-width: 999px) {
    .grid--4-col-desktop {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media screen and (max-width: 749px) {
    .multi-collection-viewer-header {
      flex-direction: column;
      align-items: flex-start;
      text-align: left;
    }

    .multi-collection-viewer-header .button {
      margin-top: 15px;
    }

    .multi-collection-viewer-tabs__container {
      flex-wrap: wrap;
      justify-content: center;
      width: 100%;
    }

    .multi-collection-viewer-tabs__button {
      font-size: 0.9rem;
      padding: 8px 18px;
    }
    
    .grid--2-col-tablet,
    .grid--2-col-mobile {
      grid-template-columns: repeat(2, 1fr);
    }
    
    .multi-collection-viewer-grid .grid {
      gap: 1rem;
    }
  }

  @media screen and (max-width: 480px) {
    .grid--2-col-mobile {
      grid-template-columns: 1fr;
    }
  }
{% endstylesheet %}

{% javascript %}
class MultiCollectionViewer {
  constructor(container) {
    this.container = container;
    this.tabs = this.container.querySelectorAll('[data-collection-handle]');
    this.contents = this.container.querySelectorAll('[data-collection-content]');
    this.init();
  }

  init() {
    if (!this.tabs.length) return;

    this.tabs.forEach(tab => {
      tab.addEventListener('click', (event) => {
        event.preventDefault();
        this.onTabClick(tab);
      });
    });
  }

  onTabClick(clickedTab) {
    const targetHandle = clickedTab.dataset.collectionHandle;

    // Update tabs
    this.tabs.forEach(tab => {
      tab.classList.remove('is-active');
    });
    clickedTab.classList.add('is-active');

    // Update content
    this.contents.forEach(content => {
      if (content.dataset.collectionContent === targetHandle) {
        content.classList.remove('hidden');
        // Trigger any lazy loading or image loading if needed
        this.loadImages(content);
      } else {
        content.classList.add('hidden');
      }
    });
  }
  
  loadImages(content) {
    // Trigger image lazy loading if the theme uses it
    const images = content.querySelectorAll('img[loading="lazy"]');
    images.forEach(img => {
      if (img.dataset.src && !img.src) {
        img.src = img.dataset.src;
      }
    });
  }
}

document.addEventListener('DOMContentLoaded', () => {
  const viewers = document.querySelectorAll('.multi-collection-viewer-tabs');
  viewers.forEach(viewer => {
    const sectionContainer = viewer.closest('.shopify-section');
    if (sectionContainer) {
      new MultiCollectionViewer(sectionContainer);
    }
  });
});

// Also initialize on Shopify theme editor events
if (Shopify && Shopify.designMode) {
  document.addEventListener('shopify:section:load', (event) => {
    const section = event.target;
    if (section.querySelector('.multi-collection-viewer-tabs')) {
      new MultiCollectionViewer(section);
    }
  });
}
{% endjavascript %}

{% schema %}
{
  "name": "Multi-Collection Viewer",
  "tag": "section",
  "class": "spaced-section",
  "max_blocks": 4,
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Featured Collections"
    },
    {
      "type": "richtext",
      "id": "description",
      "label": "Description",
      "default": "<p>Check out our curated collections. Find what you're looking for.</p>"
    },
    {
      "type": "text",
      "id": "button_label",
      "label": "Button Label",
      "default": "View All"
    },
    {
      "type": "url",
      "id": "button_link",
      "label": "Button Link"
    },
    {
      "type": "range",
      "id": "products_to_show",
      "label": "Maximum products to show",
      "min": 4,
      "max": 12,
      "step": 1,
      "default": 8
    }
  ],
  "blocks": [
    {
      "type": "collection",
      "name": "Collection",
      "settings": [
        {
          "type": "collection",
          "id": "collection",
          "label": "Collection to display"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Multi-Collection Viewer",
      "blocks": [
        {
          "type": "collection"
        },
        {
          "type": "collection"
        },
        {
          "type": "collection"
        }
      ]
    }
  ]
}
{% endschema %}