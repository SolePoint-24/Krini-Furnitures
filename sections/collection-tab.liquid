{% comment %}
  Section: Collection Tabs
  - Displays products from multiple collections in a tabbed interface.
  - Includes a customizable header and responsive design.
{% endcomment %}

<style>
  .collection-tabs-section {
    --text-color: {{ section.settings.color_scheme.settings.text_color }};
    --background-color: {{ section.settings.color_scheme.settings.background_color }};
    color: var(--text-color);
    background-color: var(--background-color);
    padding: 50px 0;
  }

  .collection-tabs__container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 15px;
  }

  .collection-tabs__header {
    text-align: center;
    margin-bottom: 40px;
  }

  .collection-tabs__title {
    font-size: 2.5rem;
    font-weight: 600;
    margin: 0 0 10px;
  }

  .collection-tabs__subtitle {
    font-size: 1.1rem;
    margin: 0 0 20px;
    opacity: 0.8;
  }

  .collection-tabs__header-link {
    text-decoration: none;
    color: var(--text-color);
    border-bottom: 1px solid var(--text-color);
    padding-bottom: 2px;
    transition: opacity 0.3s;
  }

  .collection-tabs__header-link:hover {
    opacity: 0.7;
  }

  .collection-tabs__nav {
    display: flex;
    justify-content: center;
    margin-bottom: 40px;
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
    scrollbar-width: none; /* For Firefox */
  }

  .collection-tabs__nav::-webkit-scrollbar {
    display: none; /* For Chrome, Safari, and Opera */
  }

  .collection-tabs__nav-list {
    display: flex;
    gap: 10px;
    background-color: rgba(0, 0, 0, 0.05);
    border-radius: 50px;
    padding: 5px;
    list-style: none;
    margin: 0;
  }

  .collection-tabs__tab-button {
    padding: 10px 25px;
    border: none;
    background-color: transparent;
    color: var(--text-color);
    cursor: pointer;
    border-radius: 50px;
    font-size: 1rem;
    transition: all 0.3s ease;
    white-space: nowrap;
    opacity: 0.7;
  }

  .collection-tabs__tab-button.is-active {
    background-color: #fff;
    color: #000;
    font-weight: 500;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    opacity: 1;
  }

  .collection-tabs__content-pane {
    display: none;
  }

  .collection-tabs__content-pane.is-active {
    display: block;
  }

  .collection-tabs__product-grid {
    display: grid;
    grid-template-columns: repeat(var(--grid-columns-desktop, 4), 1fr);
    gap: 20px;
  }

  @media (max-width: 990px) {
    .collection-tabs__product-grid {
      grid-template-columns: repeat(var(--grid-columns-tablet, 3), 1fr);
    }
  }

  @media (max-width: 749px) {
    .collection-tabs__title {
      font-size: 2rem;
    }
    .collection-tabs__nav {
      justify-content: flex-start;
    }
    .collection-tabs__product-grid {
      grid-template-columns: repeat(var(--grid-columns-mobile, 2), 1fr);
      gap: 15px;
    }
  }
</style>

<div
  id="collection-tabs-{{ section.id }}"
  class="collection-tabs-section"
  data-section-id="{{ section.id }}"
>
  <div class="collection-tabs__container">
    {%- if section.settings.title != blank or section.settings.subtitle != blank -%}
      <div class="collection-tabs__header">
        {%- if section.settings.title != blank -%}
          <h2 class="collection-tabs__title">{{ section.settings.title | escape }}</h2>
        {%- endif -%}
        {%- if section.settings.subtitle != blank -%}
          <p class="collection-tabs__subtitle">{{ section.settings.subtitle | escape }}</p>
        {%- endif -%}
        {%- if section.settings.link_label != blank and section.settings.link_url != blank -%}
          <a href="{{ section.settings.link_url }}" class="collection-tabs__header-link">
            {{ section.settings.link_label | escape }}
          </a>
        {%- endif -%}
      </div>
    {%- endif -%}

    {%- if section.blocks.size > 0 -%}
      <div class="collection-tabs__nav">
        <ul class="collection-tabs__nav-list" role="tablist">
          {%- for block in section.blocks -%}
            <li role="presentation">
              <button
                id="tab-{{ section.id }}-{{ forloop.index }}"
                class="collection-tabs__tab-button{% if forloop.first %} is-active{% endif %}"
                data-tab-target="#tab-panel-{{ section.id }}-{{ forloop.index }}"
                role="tab"
                aria-controls="tab-panel-{{ section.id }}-{{ forloop.index }}"
                aria-selected="{{ forloop.first }}"
              >
                {%- if block.settings.collection != blank -%}
                  {{ block.settings.collection.title }}
                {%- else -%}
                  {{ ''}}
                {%- endif -%}
              </button>
            </li>
          {%- endfor -%}
        </ul>
      </div>

      <div class="collection-tabs__content">
        {%- for block in section.blocks -%}
          <div
            id="tab-panel-{{ section.id }}-{{ forloop.index }}"
            class="collection-tabs__content-pane{% if forloop.first %} is-active{% endif %}"
            role="tabpanel"
            aria-labelledby="tab-{{ section.id }}-{{ forloop.index }}"
            style="
              --grid-columns-desktop: {{ section.settings.columns_desktop }};
              --grid-columns-tablet: {{ section.settings.columns_tablet }};
              --grid-columns-mobile: {{ section.settings.columns_mobile }};
            "
          >
            <div class="collection-tabs__product-grid">
              {%- assign collection = block.settings.collection -%}
              {%- assign limit = section.settings.products_to_show -%}

              {%- if collection != blank and collection.products.size > 0 -%}
                {%- for product in collection.products limit: limit -%}
                  {% render 'product-card', product: product %}
                {%- endfor -%}
              {%- else -%}
                {%- for i in (1..limit) -%}
                  {% render 'product-card' %}
                {%- endfor -%}
              {%- endif -%}
            </div>
          </div>
        {%- endfor -%}
      </div>
    {%- endif -%}
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const sectionId = '{{ section.id }}';
    const sectionElement = document.getElementById(`collection-tabs-${sectionId}`);
    if (!sectionElement) return;

    const tabButtons = sectionElement.querySelectorAll('.collection-tabs__tab-button');
    const contentPanes = sectionElement.querySelectorAll('.collection-tabs__content-pane');

    tabButtons.forEach(button => {
      button.addEventListener('click', () => {
        const targetPanelId = button.getAttribute('data-tab-target');
        
        // Deactivate all tabs and panes
        tabButtons.forEach(btn => {
          btn.classList.remove('is-active');
          btn.setAttribute('aria-selected', 'false');
        });
        contentPanes.forEach(pane => {
          pane.classList.remove('is-active');
        });

        // Activate the clicked tab and corresponding pane
        button.classList.add('is-active');
        button.setAttribute('aria-selected', 'true');
        const targetPanel = sectionElement.querySelector(targetPanelId);
        if (targetPanel) {
          targetPanel.classList.add('is-active');
        }
      });
    });
  });
</script>

{% schema %}
{
  "name": "Collection Tabs",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "Color Scheme",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "Section Header"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Title",
      "default": "Fashionable & Functional"
    },
    {
      "type": "text",
      "id": "subtitle",
      "label": "Subtitle",
      "default": "Explore The Full Edit"
    },
    {
      "type": "text",
      "id": "link_label",
      "label": "Link Label"
    },
    {
      "type": "url",
      "id": "link_url",
      "label": "Link URL"
    },
    {
      "type": "header",
      "content": "Product Grid Settings"
    },
    {
      "type": "range",
      "id": "products_to_show",
      "min": 2,
      "max": 16,
      "step": 1,
      "label": "Products to show",
      "default": 4
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 2,
      "max": 5,
      "step": 1,
      "label": "Columns on desktop",
      "default": 4
    },
    {
      "type": "range",
      "id": "columns_tablet",
      "min": 2,
      "max": 4,
      "step": 1,
      "label": "Columns on tablet",
      "default": 3
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "label": "Columns on mobile",
      "options": [
        {
          "value": "1",
          "label": "1"
        },
        {
          "value": "2",
          "label": "2"
        }
      ],
      "default": "2"
    }
  ],
  "blocks": [
    {
      "type": "collection_tab",
      "name": "Collection Tab",
      "limit": 4,
      "settings": [
        {
          "type": "collection",
          "id": "collection",
          "label": "Collection"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Collection Tabs",
      "blocks": [
        {
          "type": "collection_tab"
        },
        {
          "type": "collection_tab"
        },
        {
          "type": "collection_tab"
        },
        {
          "type": "collection_tab"
        }
      ]
    }
  ]
}
{% endschema %}

