{% comment %}
  ** Custom Image Carousel Block **
  - Renders a basic, custom-built carousel.
  - NO Swiper.js. Uses pure CSS & JS.
  - This file lives in the 'blocks' folder.
  - Includes autoplay and fade transition.
{% endcomment %}

{% comment %}
  Build a comma-separated string of the setting keys for images that exist.
{% endcomment %}
{%- assign image_keys_string = "" -%}
{%- if block.settings.image_1 != blank -%}
  {%- assign image_keys_string = image_keys_string | append: "image_1," -%}
{%- endif -%}
{%- if block.settings.image_2 != blank -%}
  {%- assign image_keys_string = image_keys_string | append: "image_2," -%}
{%- endif -%}
{%- if block.settings.image_3 != blank -%}
  {%- assign image_keys_string = image_keys_string | append: "image_3," -%}
{%- endif -%}
{%- if block.settings.image_4 != blank -%}
  {%- assign image_keys_string = image_keys_string | append: "image_4," -%}
{%- endif -%}
{%- if block.settings.image_5 != blank -%}
  {%- assign image_keys_string = image_keys_string | append: "image_5," -%}
{%- endif -%}
{%- if block.settings.image_6 != blank -%}
  {%- assign image_keys_string = image_keys_string | append: "image_6," -%}
{%- endif -%}

{%- assign carousel_image_keys = image_keys_string | split: "," -%}
{%- assign slide_count = 0 -%}
{%- for key in carousel_image_keys -%}
  {%- if key.size > 0 -%}
    {%- assign slide_count = slide_count | plus: 1 -%}
  {%- endif -%}
{%- endfor -%}


{%- if slide_count > 0 -%}
  <div class="custom-carousel-block" id="carousel-{{ block.id }}" {{ block.shopify_attributes }}>
    <div class="carousel-track-container">
      <ul class="carousel-track">
        {%- for key in carousel_image_keys -%}
          {%- if key.size > 0 -%}
            {%- assign image = block.settings[key] -%}
            {%- liquid
              if forloop.first
                assign is_active = "is-active"
              else
                assign is_active = ""
              endif
            -%}
            <li class="carousel-slide {{ is_active }}">
              <img
                src="{{ image | image_url: width: 1200 }}"
                alt="{{ image.alt | escape }}"
                width="{{ image.width }}"
                height="{{ image.height }}"
                loading="lazy"
                class="carousel-image"
              >
            </li>
          {%- endif -%}
        {%- endfor -%}
      </ul>
    </div>

    {%- if slide_count > 1 -%}
      <button class="carousel-button carousel-button--left" aria-label="Previous slide">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" width="24" height="24"><path d="M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"/></svg>
      </button>
      <button class="carousel-button carousel-button--right" aria-label="Next slide">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" width="24" height="24"><path d="M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z"/></svg>
      </button>

      <div class="carousel-nav">
        {%- for i in (1..slide_count) -%}
          {%- liquid
            if forloop.first
              assign is_active = "is-active"
            else
              assign is_active = ""
            endif
          -%}
          <button class="carousel-dot {{ is_active }}" data-slide-index="{{ forloop.index0 }}"></button>
        {%- endfor -%}
      </div>
    {%- endif -%}
  </div>
{%- else -%}
  <div {{ block.shopify_attributes }}>
    <p>Please add images to the carousel block.</p>
  </div>
{%- endif -%}

<style>
  .custom-carousel-block {
    padding-top: {{ block.settings.padding_top }}px;
    padding-bottom: {{ block.settings.padding_bottom }}px;
    position: relative;
    width: 100%;
    height: {{ block.settings.carousel_height }}px;
    overflow: hidden;
  }
  .carousel-track-container {
    position: relative;
    height: 100%;
    width: 100%;
  }
  .carousel-track {
    list-style: none;
    padding: 0;
    margin: 0;
    position: relative;
    height: 100%;
    width: 100%;
  }
  .carousel-slide {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    transition: opacity 0.8s ease-in-out;
  }
  .carousel-slide.is-active {
    opacity: 1;
    z-index: 1; /* Bring active slide to the front */
  }
  .carousel-image {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover; /* Ensures image covers the slide */
  }

  /* Buttons */
  .carousel-button {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    z-index: 2;
    background: rgba(255, 255, 255, 0.7);
    border: none;
    border-radius: 50%;
    width: 44px;
    height: 44px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: background-color 0.2s ease;
    color: #333;
    padding: 0;
  }
  .carousel-button:hover {
    background: rgba(255, 255, 255, 1);
  }
  .carousel-button--left {
    left: 16px;
  }
  .carousel-button--right {
    right: 16px;
  }
  .carousel-button svg {
    width: 24px;
    height: 24px;
  }

  /* Dots */
  .carousel-nav {
    position: absolute;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    z-index: 2;
    display: flex;
    gap: 12px;
  }
  .carousel-dot {
    background: rgba(255, 255, 255, 0.5);
    border: 1px solid rgba(0, 0, 0, 0.2);
    border-radius: 50%;
    width: 12px;
    height: 12px;
    cursor: pointer;
    padding: 0;
    transition: background-color 0.2s ease, transform 0.2s ease;
  }
  .carousel-dot:hover {
    background: rgba(255, 255, 255, 0.8);
  }
  .carousel-dot.is-active {
    background: #ffffff;
    transform: scale(1.1);
  }
</style>

<script>
  function initCustomCarousel_{{ block.id }}() {
    const carousel = document.getElementById('carousel-{{ block.id }}');
    if (!carousel) return;

    const slides = carousel.querySelectorAll('.carousel-slide');
    const dots = carousel.querySelectorAll('.carousel-dot');
    const nextButton = carousel.querySelector('.carousel-button--right');
    const prevButton = carousel.querySelector('.carousel-button--left');
    let currentIndex = 0;
    const totalSlides = slides.length;
    let autoplayInterval;

    if (totalSlides <= 1) {
      if(nextButton) nextButton.style.display = 'none';
      if(prevButton) prevButton.style.display = 'none';
      if(dots.length > 0) carousel.querySelector('.carousel-nav').style.display = 'none';
      return; // No need for JS if 1 or 0 slides
    }

    function moveToSlide(newIndex) {
      // Handle looping
      if (newIndex < 0) {
        newIndex = totalSlides - 1;
      } else if (newIndex >= totalSlides) {
        newIndex = 0;
      }

      // Update slides
      slides[currentIndex].classList.remove('is-active');
      slides[newIndex].classList.add('is-active');
      
      // Update dots
      if (dots.length > 0) {
        dots[currentIndex].classList.remove('is-active');
        dots[newIndex].classList.add('is-active');
      }

      currentIndex = newIndex;
    }
    
    function startAutoplay() {
      // Clear any existing interval
      if (autoplayInterval) clearInterval(autoplayInterval);
      
      autoplayInterval = setInterval(() => {
        moveToSlide(currentIndex + 1);
      }, 5000); // 5-second delay
    }
    
    function resetAutoplay() {
      clearInterval(autoplayInterval);
      startAutoplay();
    }

    // --- Event Listeners ---
    nextButton.addEventListener('click', () => {
      moveToSlide(currentIndex + 1);
      resetAutoplay();
    });

    prevButton.addEventListener('click', () => {
      moveToSlide(currentIndex - 1);
      resetAutoplay();
    });

    dots.forEach(dot => {
      dot.addEventListener('click', (e) => {
        const newIndex = parseInt(e.currentTarget.dataset.slideIndex);
        moveToSlide(newIndex);
        resetAutoplay();
      });
    });

    // Start autoplay
    startAutoplay();
  }

  // Run on first load
  document.addEventListener('DOMContentLoaded', initCustomCarousel_{{ block.id }});

  // Run in Shopify theme editor
  if (Shopify.designMode) {
    document.addEventListener('shopify:block:load', function(event) {
      if (event.detail.blockId === '{{ block.id }}') {
        initCustomCarousel_{{ block.id }}();
      }
    });
    document.addEventListener('shopify:block:select', function(event) {
      if (event.detail.blockId === '{{ block.id }}') {
        initCustomCarousel_{{ block.id }}();
      }
    });
  }
</script>

{% schema %}
{
  "name": "Image Carousel (Custom)",
  "settings": [
    {
      "type": "header",
      "content": "Carousel Images"
    },
    {
      "type": "image_picker",
      "id": "image_1",
      "label": "Image 1"
    },
    {
      "type": "image_picker",
      "id": "image_2",
      "label": "Image 2"
    },
    {
      "type": "image_picker",
      "id": "image_3",
      "label": "Image 3"
    },
    {
      "type": "image_picker",
      "id": "image_4",
      "label": "Image 4 (Optional)"
    },
    {
      "type": "image_picker",
      "id": "image_5",
      "label": "Image 5 (Optional)"
    },
    {
      "type": "image_picker",
      "id": "image_6",
      "label": "Image 6 (Optional)"
    },
    {
      "type": "header",
      "content": "Sizing & Spacing"
    },
    {
      "type": "range",
      "id": "carousel_height",
      "min": 200,
      "max": 800,
      "step": 20,
      "unit": "px",
      "label": "Carousel Height",
      "default": 400
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Top Padding",
      "default": 0
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Bottom Padding",
      "default": 0
    }
  ],
  "presets": [
    {
      "name": "Image Carousel (Custom)",
      "category": "t:categories.custom"
    }
  ]
}
{% endschema %}